"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"\u4ec0\u4e48\u662f Pluto\uff1f","href":"/docs/Introduction","docId":"Introduction"},{"type":"link","label":"\u5f00\u59cb\u4f60\u7684 Pluto \u4e4b\u65c5","href":"/docs/Getting Started","docId":"Getting Started"},{"type":"link","label":"\u5de5\u5177","href":"/docs/Tooling","docId":"Tooling"},{"type":"link","label":"Beginner\'s Guide","href":"/docs/Beginners Guide","docId":"Beginners Guide"},{"type":"category","label":"New Operators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Alternative Operators","href":"/docs/New Operators/Alternative Operators","docId":"New Operators/Alternative Operators"},{"type":"link","label":"Compound Operators","href":"/docs/New Operators/Compound Operators","docId":"New Operators/Compound Operators"},{"type":"link","label":"Increment Operator","href":"/docs/New Operators/Increment Operator","docId":"New Operators/Increment Operator"},{"type":"link","label":"Null-Coalescing Operator","href":"/docs/New Operators/Null-Coalescing Operator","docId":"New Operators/Null-Coalescing Operator"},{"type":"link","label":"Walrus Operator","href":"/docs/New Operators/Walrus Operator","docId":"New Operators/Walrus Operator"}],"href":"/docs/category/new-operators"},{"type":"category","label":"New Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"String Indexing","href":"/docs/New Features/String Indexing","docId":"New Features/String Indexing"},{"type":"link","label":"Numeral Parsing","href":"/docs/New Features/Numeral Parsing","docId":"New Features/Numeral Parsing"},{"type":"link","label":"Break Statement","href":"/docs/New Features/Break Statement","docId":"New Features/Break Statement"},{"type":"link","label":"Continue Statement","href":"/docs/New Features/Continue Statement","docId":"New Features/Continue Statement"},{"type":"link","label":"Lambda Expressions","href":"/docs/New Features/Lambda Expressions","docId":"New Features/Lambda Expressions"},{"type":"link","label":"Table Freezing","href":"/docs/New Features/Table Freezing","docId":"New Features/Table Freezing"},{"type":"link","label":"Export Modifier","href":"/docs/New Features/Export Modifier","docId":"New Features/Export Modifier"},{"type":"link","label":"String Interpolation","href":"/docs/New Features/String Interpolation","docId":"New Features/String Interpolation"},{"type":"link","label":"Ternary Expressions","href":"/docs/New Features/Ternary Expressions","docId":"New Features/Ternary Expressions"},{"type":"link","label":"Enumerations","href":"/docs/New Features/Enumerations","docId":"New Features/Enumerations"},{"type":"link","label":"For-As Loop","href":"/docs/New Features/For-As Loop","docId":"New Features/For-As Loop"},{"type":"link","label":"Switch Statement","href":"/docs/New Features/Switch Statement","docId":"New Features/Switch Statement"},{"type":"link","label":"Default Arguments","href":"/docs/New Features/Default Arguments","docId":"New Features/Default Arguments"},{"type":"link","label":"Named Arguments","href":"/docs/New Features/Named Arguments","docId":"New Features/Named Arguments"},{"type":"link","label":"Type Hinting","href":"/docs/New Features/Type Hinting","docId":"New Features/Type Hinting"},{"type":"link","label":"In Expressions","href":"/docs/New Features/In Expressions","docId":"New Features/In Expressions"},{"type":"link","label":"Named Varargs","href":"/docs/New Features/Named Varargs","docId":"New Features/Named Varargs"},{"type":"link","label":"Destructuring","href":"/docs/New Features/Destructuring","docId":"New Features/Destructuring"},{"type":"link","label":"Constexpr Attribute","href":"/docs/New Features/Constexpr Attribute","docId":"New Features/Constexpr Attribute"},{"type":"link","label":"Safe Navigation","href":"/docs/New Features/Safe Navigation","docId":"New Features/Safe Navigation"},{"type":"link","label":"Compile-Time Evaluation","href":"/docs/New Features/Compile-Time Evaluation","docId":"New Features/Compile-Time Evaluation"},{"type":"link","label":"Compiler Warnings","href":"/docs/New Features/Compiler Warnings","docId":"New Features/Compiler Warnings"},{"type":"link","label":"Object-Oriented Programming","href":"/docs/New Features/Object-Oriented Programming","docId":"New Features/Object-Oriented Programming"}],"href":"/docs/category/new-features"},{"type":"category","label":"QoL Improvements","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Boolean Concatenation","href":"/docs/QoL Improvements/Boolean Concatenation","docId":"QoL Improvements/Boolean Concatenation"},{"type":"link","label":"Improved Iteration","href":"/docs/QoL Improvements/Improved Iteration","docId":"QoL Improvements/Improved Iteration"},{"type":"link","label":"Let Alias For Local","href":"/docs/QoL Improvements/Let Alias For Local","docId":"QoL Improvements/Let Alias For Local"},{"type":"link","label":"Optional Parentheses","href":"/docs/QoL Improvements/Optional Parentheses","docId":"QoL Improvements/Optional Parentheses"},{"type":"link","label":"Removed Locals Limit","href":"/docs/QoL Improvements/Removed Locals Limit","docId":"QoL Improvements/Removed Locals Limit"},{"type":"link","label":"Reserved Identifiers","href":"/docs/QoL Improvements/Reserved Identifiers","docId":"QoL Improvements/Reserved Identifiers"},{"type":"link","label":"Syntax Errors","href":"/docs/QoL Improvements/Syntax Errors","docId":"QoL Improvements/Syntax Errors"}],"href":"/docs/category/qol-improvements"},{"type":"category","label":"Runtime Environment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IO Functions","href":"/docs/Runtime Environment/IO Functions","docId":"Runtime Environment/IO Functions"},{"type":"link","label":"OS Functions","href":"/docs/Runtime Environment/OS Functions","docId":"Runtime Environment/OS Functions"},{"type":"link","label":"Table Functions","href":"/docs/Runtime Environment/Table Functions","docId":"Runtime Environment/Table Functions"},{"type":"link","label":"String Functions","href":"/docs/Runtime Environment/String Functions","docId":"Runtime Environment/String Functions"},{"type":"link","label":"Global Functions","href":"/docs/Runtime Environment/Global Functions","docId":"Runtime Environment/Global Functions"},{"type":"link","label":"Crypto Functions","href":"/docs/Runtime Environment/Crypto Functions","docId":"Runtime Environment/Crypto Functions"},{"type":"link","label":"Coroutine Functions","href":"/docs/Runtime Environment/Coroutine Functions","docId":"Runtime Environment/Coroutine Functions"},{"type":"link","label":"Base32 Functions","href":"/docs/Runtime Environment/Base32 Functions","docId":"Runtime Environment/Base32 Functions"},{"type":"link","label":"Base58 Functions","href":"/docs/Runtime Environment/Base58 Functions","docId":"Runtime Environment/Base58 Functions"},{"type":"link","label":"Base64 Functions","href":"/docs/Runtime Environment/Base64 Functions","docId":"Runtime Environment/Base64 Functions"},{"type":"link","label":"JSON Functions","href":"/docs/Runtime Environment/JSON Functions","docId":"Runtime Environment/JSON Functions"}],"href":"/docs/category/runtime-environment"},{"type":"link","label":"Compatibility","href":"/docs/Compatibility","docId":"Compatibility"},{"type":"category","label":"Optimizations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"For Loops","href":"/docs/Optimizations/For Loops","docId":"Optimizations/For Loops"},{"type":"link","label":"Jump Table","href":"/docs/Optimizations/Jump Table","docId":"Optimizations/Jump Table"},{"type":"link","label":"Long Jump","href":"/docs/Optimizations/Long Jump","docId":"Optimizations/Long Jump"},{"type":"link","label":"Special Arthimetic","href":"/docs/Optimizations/Special Arthimetic","docId":"Optimizations/Special Arthimetic"},{"type":"link","label":"Table Length","href":"/docs/Optimizations/Table Length","docId":"Optimizations/Table Length"}],"href":"/docs/category/optimizations"},{"type":"category","label":"For Integrators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Content Moderation","href":"/docs/For Integrators/Content Moderation","docId":"For Integrators/Content Moderation"},{"type":"link","label":"Execution Time Limit","href":"/docs/For Integrators/Execution Time Limit","docId":"For Integrators/Execution Time Limit"},{"type":"link","label":"Infinite Loop Prevention","href":"/docs/For Integrators/Infinite Loop Prevention","docId":"For Integrators/Infinite Loop Prevention"},{"type":"link","label":"VM Dump","href":"/docs/For Integrators/VM Dump","docId":"For Integrators/VM Dump"}],"href":"/docs/category/for-integrators"}]},"docs":{"Beginners Guide":{"id":"Beginners Guide","title":"Beginner\'s Guide","description":"\u8fd9\u7bc7\u6587\u7ae0\u9002\u7528\u4e8e\u90a3\u4e9b\u5bf9 Lua \u5b8c\u5168\u4e0d\u719f\u6089\u4f46\u60f3\u7acb\u523b\u5f00\u59cb\u5b66\u4e60 Pluto \u7684\u4eba\u3002","sidebar":"tutorialSidebar"},"Compatibility":{"id":"Compatibility","title":"Compatibility","description":"Pluto \u4e0e Lua \u7684\u517c\u5bb9\u6027\u5982\u4f55\uff1f","sidebar":"tutorialSidebar"},"For Integrators/Content Moderation":{"id":"For Integrators/Content Moderation","title":"Content Moderation","description":"Pluto \u5141\u8bb8\u4f60\u7ba1\u7406\u5728\u73af\u5883\u4e2d\u5141\u8bb8\u8fd0\u884c\u54ea\u4e9b\u811a\u672c\u3002","sidebar":"tutorialSidebar"},"For Integrators/Execution Time Limit":{"id":"For Integrators/Execution Time Limit","title":"Execution Time Limit","description":"\u4e3a\u4e86\u5e2e\u52a9\u9700\u8981\u6c99\u76d2\u5316\u7684\u73af\u5883\uff0cPluto \u63d0\u4f9b\u4e86\u6267\u884c\u65f6\u95f4\u9650\u5236\uff08ETL\uff09\uff0c\u53ef\u901a\u8fc7\u5728 luaconf.h \u6216\u4f60\u7684\u6784\u5efa\u914d\u7f6e\u4e2d\u5b9a\u4e49 PLUTOETLENABLE \u6765\u542f\u7528\u3002","sidebar":"tutorialSidebar"},"For Integrators/Infinite Loop Prevention":{"id":"For Integrators/Infinite Loop Prevention","title":"Infinite Loop Prevention","description":"Pluto \u53ef\u4ee5\u901a\u8fc7\u9632\u6b62\u8fde\u7eed\u7684\u8fed\u4ee3\u6b21\u6570\u8fc7\u591a\u6765\u68c0\u6d4b\u65e0\u9650\u5faa\u73af\u3002\u8fd9\u662f\u56e0\u4e3a\u6e38\u620f\u7ebf\u7a0b\u901a\u5e38\u4f1a\u5f3a\u5236\u7528\u6237\u8c03\u7528\u67d0\u79cd yield \u673a\u5236\u4ee5\u5c06\u63a7\u5236\u8fd4\u56de\u5230\u6e38\u620f\u7ebf\u7a0b\u3002\u5728 Pluto \u4e2d\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u8fed\u4ee3\u7684\u786c\u6027\u9650\u5236\uff0c\u7136\u540e\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8be5\u51fd\u6570\u5e94\u8be5\u9632\u6b62\u5728\u5176\u88ab\u8c03\u7528\u7684\u5faa\u73af\u4e2d\u53d1\u751f\u65e0\u9650\u5faa\u73af\u3002","sidebar":"tutorialSidebar"},"For Integrators/VM Dump":{"id":"For Integrators/VM Dump","title":"VM Dump","description":"Pluto \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u9009\u7684\u3001\u53ef\u914d\u7f6e\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u67e5\u770b\u5728 Lua VM \u4e2d\u6267\u884c\u7684\u6bcf\u6761\u6307\u4ee4\u3002","sidebar":"tutorialSidebar"},"Getting Started":{"id":"Getting Started","title":"\u5f00\u59cb\u4f60\u7684 Pluto \u4e4b\u65c5","description":"\u672c\u6587\u5c06\u89e3\u91ca\u5982\u4f55\u5feb\u901f\u5165\u95e8 Pluto \u7f16\u7a0b\u3002","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"\u4ec0\u4e48\u662f Pluto\uff1f","description":"Pluto \u662f Lua 5.4 \u7684\u8d85\u96c6\uff0c\u4e13\u4e3a\u901a\u7528\u7f16\u7a0b\u800c\u8bbe\u8ba1\u3002\u5c3d\u7ba1\u5728\u6e90\u4ee3\u7801\u548c\u5b57\u8282\u7801\u65b9\u9762\u4e0e Lua 5.4 \u9ad8\u5ea6\u517c\u5bb9\uff0c\u4f46\u5b83\u589e\u5f3a\u4e86\u6807\u51c6\u5e93\uff0c\u5e76\u6dfb\u52a0\u4e86\u5341\u591a\u79cd\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8bed\u6cd5\u529f\u80fd\uff0c\u5982 switch \u8bed\u53e5\u3001\u590d\u5408\u8fd0\u7b97\u7b26\u3001\u7c7b\u3001\u7c7b\u7ee7\u627f\u3001\u5b57\u7b26\u4e32\u5185\u63d2\u3001\u7c7b\u578b\u63d0\u793a\u3001\u679a\u4e3e\u7b49\u7b49\u3002","sidebar":"tutorialSidebar"},"New Features/Break Statement":{"id":"New Features/Break Statement","title":"Break Statement","description":"This keyword accepts an optional integral argument which tells it how many levels of enclosing loops it should break. The default value is 1, thus breaking out of the current loop.","sidebar":"tutorialSidebar"},"New Features/Compile-Time Evaluation":{"id":"New Features/Compile-Time Evaluation","title":"Compile-Time Evaluation","description":"Pluto\'s parser provides some powerful constructs which allow you to write code that will never be seen at runtime.","sidebar":"tutorialSidebar"},"New Features/Compiler Warnings":{"id":"New Features/Compiler Warnings","title":"Compiler Warnings","description":"Pluto offers optional compiler warnings for certain misbehaviors.","sidebar":"tutorialSidebar"},"New Features/Constexpr Attribute":{"id":"New Features/Constexpr Attribute","title":"Constexpr Attribute","description":"Pluto adds the ` attribute which is a strengthened version of the ` attribute.","sidebar":"tutorialSidebar"},"New Features/Continue Statement":{"id":"New Features/Continue Statement","title":"Continue Statement","description":"Continue statements, like break, are meant to be used in loops. They skip the current iteration of the loop.","sidebar":"tutorialSidebar"},"New Features/Default Arguments":{"id":"New Features/Default Arguments","title":"Default Arguments","description":"During a function declaration, parameters can now declare their own default value.","sidebar":"tutorialSidebar"},"New Features/Destructuring":{"id":"New Features/Destructuring","title":"Destructuring","description":"Destructuring is a better way to assign local variables from expressions that return a table.","sidebar":"tutorialSidebar"},"New Features/Enumerations":{"id":"New Features/Enumerations","title":"Enumerations","description":"Pluto adds the following syntax:","sidebar":"tutorialSidebar"},"New Features/Export Modifier":{"id":"New Features/Export Modifier","title":"Export Modifier","description":"The export modifier allows you to automatically aggregate things you want to export into a table.","sidebar":"tutorialSidebar"},"New Features/For-As Loop":{"id":"New Features/For-As Loop","title":"For-As Loop","description":"When you only want to iterate over the values of a table, you can use Pluto\'s for-as syntax.","sidebar":"tutorialSidebar"},"New Features/In Expressions":{"id":"New Features/In Expressions","title":"In Expressions","description":"Searching a string for a substring, or searching an array for an element is a very simple operation now. The in operator has been extended to support these operations.","sidebar":"tutorialSidebar"},"New Features/Lambda Expressions":{"id":"New Features/Lambda Expressions","title":"Lambda Expressions","description":"Lambda expressions are shorthand function objects for evaluating quick expressions. Take this code:","sidebar":"tutorialSidebar"},"New Features/Named Arguments":{"id":"New Features/Named Arguments","title":"Named Arguments","description":"Instead of positional arguments, you can use the names of arguments you want to set:","sidebar":"tutorialSidebar"},"New Features/Named Varargs":{"id":"New Features/Named Varargs","title":"Named Varargs","description":"If you have a function that takes varargs and you want them in a table, you\'d have to do something like this:","sidebar":"tutorialSidebar"},"New Features/Numeral Parsing":{"id":"New Features/Numeral Parsing","title":"Numeral Parsing","description":"Pluto makes two small changes to numeral parsing.","sidebar":"tutorialSidebar"},"New Features/Object-Oriented Programming":{"id":"New Features/Object-Oriented Programming","title":"Object-Oriented Programming","description":"Pluto makes a plethora of improvements when it comes to object-oriented programming.","sidebar":"tutorialSidebar"},"New Features/Safe Navigation":{"id":"New Features/Safe Navigation","title":"Safe Navigation","description":"Accessing deeply nested fields which can potentially be nil was problematic, because you\'d need an unreasonable amount of guard clauses to prevent an \\"attempt to index nil\\" error. Pluto now offers this syntax:","sidebar":"tutorialSidebar"},"New Features/String Indexing":{"id":"New Features/String Indexing","title":"String Indexing","description":"You can index strings for their characters now, which is cleaner & 3x faster than using string.sub. String indexing only occurs when you index with an integer, either positive or negative. Positive integers index from the start of the string, and negative integers index from the end.","sidebar":"tutorialSidebar"},"New Features/String Interpolation":{"id":"New Features/String Interpolation","title":"String Interpolation","description":"String interpolation is a simple alternative syntax to concatenation.","sidebar":"tutorialSidebar"},"New Features/Switch Statement":{"id":"New Features/Switch Statement","title":"Switch Statement","description":"The switch statement consists of the following new keywords:","sidebar":"tutorialSidebar"},"New Features/Table Freezing":{"id":"New Features/Table Freezing","title":"Table Freezing","description":"Tables can now be frozen at their current state to forbid any future modification. This action is irreversible and permanent for the lifespan of the table.","sidebar":"tutorialSidebar"},"New Features/Ternary Expressions":{"id":"New Features/Ternary Expressions","title":"Ternary Expressions","description":"Ternary expressions behave identical as to how they would in C. They introduce no new keywords.","sidebar":"tutorialSidebar"},"New Features/Type Hinting":{"id":"New Features/Type Hinting","title":"Type Hinting","description":"Type-hinting looks like this:","sidebar":"tutorialSidebar"},"New Operators/Alternative Operators":{"id":"New Operators/Alternative Operators","title":"Alternative Operators","description":"Pluto implements alternative operators, which are aliases for other operators.","sidebar":"tutorialSidebar"},"New Operators/Compound Operators":{"id":"New Operators/Compound Operators","title":"Compound Operators","description":"Pluto implements a plethora of compound operators, which are actually faster than their Lua counterparts.","sidebar":"tutorialSidebar"},"New Operators/Increment Operator":{"id":"New Operators/Increment Operator","title":"Increment Operator","description":"Pluto provides an easy way to increment variables using the prefixed ++ operator:","sidebar":"tutorialSidebar"},"New Operators/Null-Coalescing Operator":{"id":"New Operators/Null-Coalescing Operator","title":"Null-Coalescing Operator","description":"The null-coalescing operator (or more appropriately, nil-coalescing operator) can be used as follows:","sidebar":"tutorialSidebar"},"New Operators/Walrus Operator":{"id":"New Operators/Walrus Operator","title":"Walrus Operator","description":"The Walrus operator allows you to perform assignment expresssions, where the second operand to your assignment is the value of the expression.","sidebar":"tutorialSidebar"},"Optimizations/For Loops":{"id":"Optimizations/For Loops","title":"For Loops","description":"The pairs and ipairs functions are optimized in Pluto. On a consistent basis, pairs & ipairs loops are 3.5x faster than their Lua counterparts.","sidebar":"tutorialSidebar"},"Optimizations/Jump Table":{"id":"Optimizations/Jump Table","title":"Jump Table","description":"Lua implemented a jump table, but it is only compatible with clang and gcc. Pluto has an additional jump table implementation for other compilers; however, it is not enabled by default as it can add minutes to compile time, depending on the setup. In some instances, it can increase overall virtual machine performance by ~5%.","sidebar":"tutorialSidebar"},"Optimizations/Long Jump":{"id":"Optimizations/Long Jump","title":"Long Jump","description":"Although Lua presents the option to use long jumps even when compiling as C++, it doesn\'t default to doing so, instead requiring you to define LUAUSELONGJMP.","sidebar":"tutorialSidebar"},"Optimizations/Special Arthimetic":{"id":"Optimizations/Special Arthimetic","title":"Special Arthimetic","description":"Special arithmetic algorithms are optimized by Pluto during compile-time.","sidebar":"tutorialSidebar"},"Optimizations/Table Length":{"id":"Optimizations/Table Length","title":"Table Length","description":"Pluto will cache the length of a table when you request it for the first time. This cache is refreshed whenever you make an edit to the table. It\'s still advisable to localize this value though, since looking through the cache and the virtual machine is expensive compared to looking up a local.","sidebar":"tutorialSidebar"},"QoL Improvements/Boolean Concatenation":{"id":"QoL Improvements/Boolean Concatenation","title":"Boolean Concatenation","description":"Pluto allows you to concatenate boolean values just like you would number values:","sidebar":"tutorialSidebar"},"QoL Improvements/Improved Iteration":{"id":"QoL Improvements/Improved Iteration","title":"Improved Iteration","description":"Pluto improves iteration in a few ways.","sidebar":"tutorialSidebar"},"QoL Improvements/Let Alias For Local":{"id":"QoL Improvements/Let Alias For Local","title":"Let Alias For Local","description":"You can optionally use \'let\' instead of \'local\' when declaring scoped variables.","sidebar":"tutorialSidebar"},"QoL Improvements/Optional Parentheses":{"id":"QoL Improvements/Optional Parentheses","title":"Optional Parentheses","description":"The parenthesis around some types of expressions are optional now.","sidebar":"tutorialSidebar"},"QoL Improvements/Removed Locals Limit":{"id":"QoL Improvements/Removed Locals Limit","title":"Removed Locals Limit","description":"Pluto removes the locals limit, allowing you to use compile-time constants, including enums, as much as you want.","sidebar":"tutorialSidebar"},"QoL Improvements/Reserved Identifiers":{"id":"QoL Improvements/Reserved Identifiers","title":"Reserved Identifiers","description":"Pluto allows you to use reserved tokens such as if from Lua and class from Pluto as identifiers with shorthand table syntax and for goto labels.","sidebar":"tutorialSidebar"},"QoL Improvements/Syntax Errors":{"id":"QoL Improvements/Syntax Errors","title":"Syntax Errors","description":"The messages for syntax errors are enhanced. They include tailored messages and code snippets, which should help newer programmers identify problems quicker. It\'s not a game changer, but it\'s neat.","sidebar":"tutorialSidebar"},"Runtime Environment/Base32 Functions":{"id":"Runtime Environment/Base32 Functions","title":"Base32 Functions","description":"Only available if you compiled Pluto with Soup. Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Base58 Functions":{"id":"Runtime Environment/Base58 Functions","title":"Base58 Functions","description":"Only available if you compiled Pluto with Soup. Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Base64 Functions":{"id":"Runtime Environment/Base64 Functions","title":"Base64 Functions","description":"Only available if you compiled Pluto with Soup. Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Coroutine Functions":{"id":"Runtime Environment/Coroutine Functions","title":"Coroutine Functions","description":"New functions for the coroutine library, implemented by Pluto.","sidebar":"tutorialSidebar"},"Runtime Environment/Crypto Functions":{"id":"Runtime Environment/Crypto Functions","title":"Crypto Functions","description":"Functions regarding cryptography, implemented by Pluto.","sidebar":"tutorialSidebar"},"Runtime Environment/Global Functions":{"id":"Runtime Environment/Global Functions","title":"Global Functions","description":"Some minor changes & additions to the environment must be disclosed:","sidebar":"tutorialSidebar"},"Runtime Environment/IO Functions":{"id":"Runtime Environment/IO Functions","title":"IO Functions","description":"New functions for the io library, implemented by Pluto.","sidebar":"tutorialSidebar"},"Runtime Environment/JSON Functions":{"id":"Runtime Environment/JSON Functions","title":"JSON Functions","description":"Only available if you compiled Pluto with Soup. Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/OS Functions":{"id":"Runtime Environment/OS Functions","title":"OS Functions","description":"New functions for the os library, implemented by Pluto.","sidebar":"tutorialSidebar"},"Runtime Environment/String Functions":{"id":"Runtime Environment/String Functions","title":"String Functions","description":"New functions for the string type, implemented by Pluto.","sidebar":"tutorialSidebar"},"Runtime Environment/Table Functions":{"id":"Runtime Environment/Table Functions","title":"Table Functions","description":"New functions for the table type, implemented by Pluto.","sidebar":"tutorialSidebar"},"Tooling":{"id":"Tooling","title":"\u5de5\u5177","description":"\u867d\u7136\u7406\u8bba\u4e0a Pluto \u53ef\u4ee5\u4f7f\u7528\u9762\u5411 Lua \u7684\u5de5\u5177\uff0c\u4f46\u540c\u65f6\u4e5f\u6709\u4e13\u95e8\u7684\u63d2\u4ef6\u6765\u4f18\u5316\u4f60\u5728VS Code\uff0c Sublime Text\u7b49\u4e2d\u7684\u7f16\u7801\u4f53\u9a8c\u3002","sidebar":"tutorialSidebar"}}}')}}]);